name: Release Go Binaries

on: 
  release:
    types: [created]

jobs:
  releases-matrix:
    name: Release Go Binary
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, darwin]
        goarch: ["386", amd64, arm64]
        exclude:
          - goarch: "386"
            goos: darwin
    steps:
    - uses: actions/checkout@v2

    - name: Set APP_VERSION env
      run: echo APP_VERSION=$(echo ${GITHUB_REF} | rev | cut -d'/' -f 1 | rev ) >> ${GITHUB_ENV}

    - name: Environment Printer
      uses: managedkaos/print-env@v1.0

    - uses: wangyoucao577/go-release-action@v1.24
      with:
        binary_name: "golp"
        asset_name: "golp_${{ matrix.goos }}_${{ matrix.goarch }}"
        # extra_files: LICENSE README.md
        github_token: ${{ secrets.GITHUB_TOKEN }}
        md5sum: false
        overwrite: true
        goos: ${{ matrix.goos }}
        goarch: ${{ matrix.goarch }}
        pre_command: export CGO_ENABLED=1
        ldflags: -s -w -X "github.com/axllent/golp/cmd.Version=${{ env.APP_VERSION }}"

  releases-win-matrix:
    name: Release Windows Go Binary
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [windows]
        goarch: ["386", amd64]
    steps:
    - uses: actions/checkout@v2

    - name: Set APP_VERSION env
      run: echo APP_VERSION=$(echo ${GITHUB_REF} | rev | cut -d'/' -f 1 | rev ) >> ${GITHUB_ENV}

    - name: Environment Printer
      uses: managedkaos/print-env@v1.0

    - uses: wangyoucao577/go-release-action@v1.24
      with:
        binary_name: "golp"
        asset_name: "golp_${{ matrix.goos }}_${{ matrix.goarch }}"
        # extra_files: LICENSE README.md
        github_token: ${{ secrets.GITHUB_TOKEN }}
        md5sum: false
        overwrite: true
        goos: ${{ matrix.goos }}
        goarch: ${{ matrix.goarch }}
        pre_command: set CGO_ENABLED=1
        ldflags: -s -w -extldflags -static -X "github.com/axllent/golp/cmd.Version=${{ env.APP_VERSION }}"
